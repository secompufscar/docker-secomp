version: '3'

services:
    db:
        image: mysql:latest
        environment:
            MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD:-root}"
            MYSQL_DATABASE: "${MYSQL_DATABASE:-db}"
            MYSQL_USER: "${MYSQL_USER:-root}"
            MYSQL_PASSWORD: "${MYSQL_PASSWORD:-root}"
        volumes:
            - ./volumes/db/tables:/docker-entrypoint-initdb.d
            - ./volumes/db/data:/var/lib/mysql
            - ./volumes/db/secomp.cnf:/etc/mysql/conf.d/custom.cnf
        ports:
            - "3306:3306"
        restart: always

    backup:
        build: ./volumes/db/backup/setup/
        environment:
              MYSQL_DATABASE: "${MYSQL_DATABASE:-db}"
              MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD:-root}"
        volumes:
              - /etc/localtime:/etc/localtime:ro
              - ./volumes/db/backup/data:/opt/mysql/backup
        command: crond -f -d 8
        depends_on:
              - db
        restart: always

    flask:
        build: .
        environment:
            FLASK_ENVIRONMENT: "${FLASK_ENVIRONMENT:-default}"
            WORKERS: "${WORKERS:-4}"
            MYSQL_DATABASE: "${MYSQL_DATABASE:-db}"
        volumes:
            - ./volumes/flask/uploads:/uploads
            - ./volumes/db/migrations:/site-secomp/migrations
        expose:
            - "8000"
        depends_on:
            - db
        restart: always

    nginx:
        image: nginx:alpine
        restart: unless-stopped
        volumes:
            - ./volumes/nginx:/etc/nginx/conf.d
            - ./volumes/certbot/conf:/etc/certs
            - ./volumes/certbot/www:/var/www/certbot
            - ./site-secomp:/site-secomp
        ports:
            - "80:80"
            - "443:443"
        depends_on:
            - flask
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

        #    certbot:
        #        image: certbot/certbot
        #       restart: unless-stopped
        #        volumes:
        #            - ./volumes/nginx/log:/var/log/nginx
        #            - ./volumes/certbot/conf:/etc/letsencrypt
        #            - ./volumes/certbot/www:/var/www/certbot
        #        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
